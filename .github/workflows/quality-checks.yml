name: Quality Checks

on:
  pull_request:
    branches: [master, develop]
  workflow_dispatch:

jobs:
  frontend-build:
    # if: ${{ contains(github.event.pull_request.changed_files, 'frontend/') }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.9.0"
          cache: "pnpm"
          cache-dependency-path: "frontend/pnpm-lock.yaml"

      - name: Install dependencies
        run: |
          pnpm install --no-frozen-lockfile
          pnpm install

      - name: Create Build
        env:
          NEXT_PUBLIC_API_BASE_URL: "http://fake-api-for-build.example.com"
        run: pnpm build

  backend-checks:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            backend/pyproject.toml
            backend/.pre-commit-config.yaml

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Add uv to PATH
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Create virtual environment
        run: |
          uv venv
          echo "$PWD/.venv/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv pip install "pre-commit[default]"
          uv pip sync pyproject.toml
          uv pip install types-redis types-requests

      - name: Run pre-commit checks
        run: pre-commit run --all-files
